/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FormFieldValidation
 */
export interface FormFieldValidation {
    /**
     * 
     * @type {string}
     * @memberof FormFieldValidation
     */
    fieldId: string;
    /**
     * 
     * @type {string}
     * @memberof FormFieldValidation
     */
    formId: string;
    /**
     * 
     * @type {object}
     * @memberof FormFieldValidation
     */
    fieldValue: object;
    /**
     * 
     * @type {boolean}
     * @memberof FormFieldValidation
     */
    valide?: boolean;
}

/**
 * Check if a given object implements the FormFieldValidation interface.
 */
export function instanceOfFormFieldValidation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fieldId" in value;
    isInstance = isInstance && "formId" in value;
    isInstance = isInstance && "fieldValue" in value;

    return isInstance;
}

export function FormFieldValidationFromJSON(json: any): FormFieldValidation {
    return FormFieldValidationFromJSONTyped(json, false);
}

export function FormFieldValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormFieldValidation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldId': json['fieldId'],
        'formId': json['formId'],
        'fieldValue': json['fieldValue'],
        'valide': !exists(json, 'valide') ? undefined : json['valide'],
    };
}

export function FormFieldValidationToJSON(value?: FormFieldValidation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldId': value.fieldId,
        'formId': value.formId,
        'fieldValue': value.fieldValue,
        'valide': value.valide,
    };
}

