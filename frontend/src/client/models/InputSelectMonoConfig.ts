/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { I18NString } from './I18NString';
import {
    I18NStringFromJSON,
    I18NStringFromJSONTyped,
    I18NStringToJSON,
} from './I18NString';

/**
 * 
 * @export
 * @interface InputSelectMonoConfig
 */
export interface InputSelectMonoConfig {
    /**
     * Selectable options
     * @type {{ [key: string]: I18NString; }}
     * @memberof InputSelectMonoConfig
     */
    options?: { [key: string]: I18NString; };
}

/**
 * Check if a given object implements the InputSelectMonoConfig interface.
 */
export function instanceOfInputSelectMonoConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InputSelectMonoConfigFromJSON(json: any): InputSelectMonoConfig {
    return InputSelectMonoConfigFromJSONTyped(json, false);
}

export function InputSelectMonoConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): InputSelectMonoConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'options': !exists(json, 'options') ? undefined : (mapValues(json['options'], I18NStringFromJSON)),
    };
}

export function InputSelectMonoConfigToJSON(value?: InputSelectMonoConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'options': value.options === undefined ? undefined : (mapValues(value.options, I18NStringToJSON)),
    };
}

